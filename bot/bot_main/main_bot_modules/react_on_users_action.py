import os
from random import choice, randint

from aiogram import types
from aiogram.types import ContentType, InputFile

from bot.bot_main import main_objects_initialization
from bot.bot_main.for_mem_creation.create_meme import create_meme
from bot.bot_main.main_objects_initialization import dp, bot


@dp.message_handler(content_types=ContentType.PHOTO, regexp='–º–µ–º|mem')
async def create_mem(message: types.Message):
    await message.photo[-1].download('img/test.jpg')
    print('Photo downloaded...')
    create_meme(main_objects_initialization.extract_random_data.get_bullshit())
    photo = InputFile('img/result.jpg')
    print('Photo sending...')
    await bot.send_photo(message.chat.id, photo=photo)


@dp.message_handler(content_types=ContentType.VOICE)
async def voice_reply(message: types.Message):
    voice = InputFile(f'voice/{choice(os.listdir("voice"))}')

    print('Voice sending...')
    if randint(0, 5) == 3:
        print('Voice message answer are sending...')
        await message.reply_voice(voice=voice)


@dp.message_handler(content_types=ContentType.LEFT_CHAT_MEMBER)
async def say_goodbye(message: types.Message):
    await message.reply('–ü–æ–∫–∞üëã')


@dp.message_handler(content_types=ContentType.NEW_CHAT_MEMBERS)
async def say_hello(message: types.Message):
    await message.reply('–ó–¥–æ—Ä–æ–≤üëã')


@dp.message_handler(content_types=ContentType.NEW_CHAT_PHOTO)
async def new_chat_photo(message: types.Message):
    await message.reply('–û, –Ω–æ–≤–∞ —Ñ–æ—Ç–∫–∞ —á–∞—Ç—É!')


@dp.message_handler(content_types=ContentType.DELETE_CHAT_PHOTO)
async def delete_chat_photo(message: types.Message):
    await message.reply('–ó–Ω–µ—Å–ª–∏ —Ñ–æ—Ç–∫—É —á–∞—Ç—É. –Ü —à–æ –±—É–¥–µ –¥–∞–ª—ñ? –î–µ—Ä–∂–∞–≤–Ω–∏–π –ø–µ—Ä–µ–≤–æ—Ä—Ç?')


@dp.message_handler(content_types=ContentType.VIDEO)
async def react_to_video(message: types.Message):
    react_list = [
        '–ù—É –∫–∏–Ω—É–≤ –≤—ñ–¥–æ—Å. –ê —Ç–µ–ø–µ—Ä —Ä–æ–∑–∫–∞–∂–∏-–Ω–æ, —à–æ —Ç–∞–º. –Ø–∫–∏–π –∑–º—ñ—Å—Ç —ñ —Ç–µ–º–∞ –≤—ñ–¥–µ–æ?',
        '–®–æ –∑–∞ –≤—ñ–¥–æ—Å?',
        '–í—ñ–¥–æ—Å...—è—Å–Ω–æ',
        '–ù–µ —Ö–æ—á–µ—à —Ä–æ–∑–∫–∞–∑–∞—Ç–∏, —à–æ –≤ –≤—ñ–¥–æ—Å—ñ?',
    ]
    await message.reply(choice(react_list))


@dp.message_handler(content_types=ContentType.ANIMATION)
async def react_to_animation(message: types.Message):
    react_list = [
        '–®–æ —Ü–µ? –ì—ñ—Ñ–∫–∞? –Ø —Ç–∞–∫–µ –Ω–µ —á–∏—Ç–∞—é',
        '–ô–º–æ–≤—ñ—Ä–Ω–æ, –∫–æ–ª–∏—Å—å —Ç–≤–æ—Ä–µ—Ü—å –Ω–∞–≤—á–∏—Ç—å –º–µ–Ω–µ —Ä–æ–∑—É–º—ñ—Ç–∏ —Ü–µ',
        '–ù–µ –ª—é–±–ª—é —è —Ç–∞–∫–∏—Ö —Ñ–∞–π–ª—ñ–≤.',
        '–ß–∏ –Ω–µ–º–∞ —Ç–∞–º –º–µ–º—É –≤–∏–ø–∞–¥–∫–æ–≤–æ?',
        '–ü—Ä–æ–ø–æ–Ω—É—é –≤–∏—Ä—ñ–∑–∞—Ç–∏ –∑ —Ü—å–æ–≥–æ —Ñ–∞–π–ª—É —Ñ–æ—Ç–æ —ñ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –º–µ–Ω—ñ –∑ –ø—ñ–¥–ø–∏—Å–æ–º "–º–µ–º".',
    ]
    await message.reply(choice(react_list))


@dp.message_handler(content_types=ContentType.POLL)
async def react_to_poll(message: types.Message):
    await message.reply('–†–æ–∑–∫–∞–∂—ñ—Ç—å, –ø—Ä–æ —à–æ –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è –ú–∞—Ä—Ç–∏–Ω—É')
